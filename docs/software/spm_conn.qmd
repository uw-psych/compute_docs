---
title: "SPM and CONN Toolboxes"
description: Statistical parametric mapping and functional connectivity toolboxes for MATLAB
---
# SPM and CONN Toolboxes

[Statistical Parametric Mapping (SPM)](https://www.fil.ion.ucl.ac.uk/spm/) and [CONN](https://web.conn-toolbox.org/) are available as [{{< term Lmod >}}](../compute/lmod.qmd) modules on {{< term Klone >}} {{< term "compute node" display="compute nodes" >}} >}}

## Use with Lmod

Like all {{< term Lmod >}} modules, the `spm` and `conn` modules are available only on {{< term Klone >}} {{< "compute node" display="compute nodes" >}}, and these commands will not work on the {{< term "login node" >}}.

### Checking available versions

Because the modules for SPM and CONN are installed in the `escience` hierarchy, their names are prefixed with `escience/`.

You can check the installed versions as follows:

```bash
module spider escience/spm

#  Output:
#  ---------------------------------------
#    escience/spm: escience/spm/12
#  ---------------------------------------
#  
#      This module can be loaded directly: module load escience/spm/12
#  
#      Help:
#        spm12
```

```bash
module spider escience/conn

#  Output:
#  ---------------------------------------
#    escience/conn: escience/conn/v.22.a
#  ---------------------------------------
#  
#      This module can be loaded directly: module load escience/conn/v.22.a
#  
#      Help:
#        conn-v.22.a
```

### Using SPM

Load the default version with `module load escience/spm`,

or load a specific version with `module load escience/spm/<version>`.

After loading the module, start `matlab` and run `spm` in the MATLAB command window.

### Using CONN

Load the default version with `module load escience/conn`

or load a specific version with `module load escience/conn/<version>`.

After loading the module, start `matlab` and run `conn` in the MATLAB command window.

### Installing a different version of SPM

::: callout-note
This is provided as reference material.
:::

1. Download a version of SPM from [https://www.fil.ion.ucl.ac.uk/spm/software/download/](https://www.fil.ion.ucl.ac.uk/spm/software/download/).

2. Extract the .zip archive to `/sw/contrib/labname-src/spm/spm<version>/`.
   
   For example, if installing version 12 of SPM, then run the following:
   
   ```bash  
   LABNAME=escience # <1>
   VERSION=12 # <2>
   TARGET="/sw/contrib/${LABNAME}-src/spm/" # <3>
   mkdir -p "${TARGET}" # <4>
   unzip "spm${VERSION}.zip" -d "${TARGET}" # <5>
   ```
   1. Set the labname to the name of the lab that is installing the software.  
   2. Set the version to the version of SPM that is being installed.  
   3. Set the target directory to the directory where the software will be installed.  
   4. Create the target directory if it does not exist.  
   5. Extract the SPM archive to the target directory.
   
3. Create an Lmod `.lua` module file for the new release with a text editor, using `<version>.lua` as the filename:  
   
   For example, if installing version 12 of SPM, then run the following:
   
   ```lua
   help([[spm12]])
   local labname = "escience"
   local version = "12"
   local base = "/sw/contrib/" .. labname .. "-src/spm/spm" .. version
   depends_on("matlab")
   append_path("MATLABPATH", base)
   whatis("Name: spm")
   whatis("Version: " .. version)
   ```   

::: callout-note
Lmod takes some time to cache available modules. If a module does not appear, use the `-I` or `--ignore_cache` flag to force Lmod to check for new modules.

``` bash
module -I load labname/spm
```
:::

## Installing a different version of CONN

::: callout-note
This is provided as reference material.
:::

1.  Download a version of CONN from [https://www.nitrc.org/frs/?group_id=279](https://www.nitrc.org/frs/?group_id=279)
2.  Extract the .zip archive to  `/sw/contrib/labname-src/conn/conn<version>/`  
    For example, if installing version `v.22.a` from `conn22a.zip`, then run the following:  
    ```bash  
    LABNAME=escience # <1>
    VERSION=v.22.a # <2>
    TARGET="/sw/contrib/${LABNAME}-src/conn/" # <3>
    mkdir -p "${TARGET}" # <4>
    unzip conn22a.zip -d "${TARGET}" # <5>
    mv "$TARGET/conn" "${TARGET}/${VERSION}" # <6>
    ```
    1. Set the labname to the name of the lab that is installing the software.  
    2. Set the version to the version of SPM that is being installed.  
    3. Set the target directory to the directory where the software will be installed.  
    4. Create the target directory if it does not exist.  
    5. Extract the SPM archive to the target directory.  
  
3.  Create an Lmod `.lua` module file for the new release with a text editor, using `<version>.lua` as the filename:  
    ``` {.lua filename=/sw/contrib/modulefiles/labname/conn/v.22.a.lua}
    help([[conn-v.22.a]])
    local labname = "escience"
    local version = "v.22.a" # <1>
    local base = pathJoin("/sw/contrib/" .. labname .. "-src/conn", version)
    depends_on("matlab")
    depends_on("escience/spm")
    append_path("MATLABPATH", base)
    whatis("Name: CONN")
    whatis("Version: " .. version)
    ```  
    1. Set the version to the version of CONN that is being installed.

::: callout-note
Lmod takes some time to cache available modules. If a module does not appear, use the `-I` or `--ignore_cache` flag to force Lmod to check for new modules.

```bash
module -I load labname/conn
```
:::
